plugins {
    id 'java-library'
    id 'maven-publish'
    id 'signing'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    withJavadocJar()
    withSourcesJar()
}

test {
    useJUnitPlatform()
}

dependencies {
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.11.0'
}

group = rootProject.ext.groupId
version = rootProject.ext.versionCode

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = "${group}"
            artifactId = 'apdu'
            version = "${version}"

            from components.java

                    pom {
                        name = 'APDU for Java'
                        description = 'Utilities for encoding the command of APDU and decoding the response representation of binary data.'
                        url = 'https://github.com/keiji/javacard-practice/tree/main/android-app/apdu'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'keiji'
                                name = 'ARIYAMA Keiji'
                                email = 'keiji.ariyama@gmail.com'
                            }
                        }
                        scm {
                            connection = 'https://github.com/keiji/javacard-practice.git'
                            developerConnection = 'https://github.com/keiji/javacard-practice.git'
                            url = 'https://github.com/keiji/javacard-practice/tree/main/android-app/apdu'
                        }
                    }
        }
    }

    repositories {
        maven {
            url = rootProject.ext.repoUrl
            credentials {
                username = rootProject.ext.sonatypeUsername
                password = rootProject.ext.sonatypePassword
            }
        }
    }
}

signing {
    useGpgCmd()
    sign publishing.publications.mavenJava
}
